{"version":3,"sources":["crud-logs-es6.js"],"names":[],"mappings":"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","file":"crud-logs.js","sourcesContent":["$(() => {\n  abc.initialize()\n  // ebot.updateDocumentation(abc)\n})\n\nlet abc = {\n  \n  initialize: () => {\n    abc.assignInitialHandlers()\n    ebot.insertModalHtml()\n  },\n\n  assignInitialHandlers: () => {\n    abc.handlerLogCreateButton()\n    abc.getLogs().then(logs => {\n      abc.logs = logs\n      abc.createTable()\n    })\n  },\n\n  createTable: () => {\n    let htmlString = `<table id='log-table' class='table'>`\n\n    htmlString += `\n    <tr>\n      <th>Log Id</th>\n      <th>Log Name</th>\n      <th>Player Character Id</th>\n      <th></th>\n      <th></th>\n    </tr>`\n\n    abc.logs.forEach(log => {\n      htmlString += `<tr data-id='${log._id}'>`\n      htmlString += `<td>${log.logId}</td>`\n      htmlString += `<td>${log.logName}</td>`\n      htmlString += `<td>${log.playerCharacterId}</td>`\n      htmlString += `<td><button class='btn btn-sm update-log' data-id='${log._id}'>Update</button></td>`\n      htmlString += `<td><button class='btn btn-sm delete-log' data-id='${log._id}'>Delete</button></td>`\n      htmlString += `</tr>`\n    })\n\n\n    htmlString += `</table>`\n    $(\"#log-table-wrapper\").html(htmlString)\n    abc.handlerLogTable()\n  },\n\n  handlerLogTable: () => {\n    $(\".update-log\").click(e => {\n      let button = $(e.currentTarget)\n      let id = button.attr(\"data-id\")\n      ebot.showModal(`Update Log`, abc.getLogForm())\n      abc.fillLogFormWithOldData(id)\n      abc.handlerUpdate(id)\n    })\n\n    $(\".delete-log\").click(e => {\n      let button = $(e.currentTarget)\n      let id = button.attr(\"data-id\")\n      ebot.showModal(`Are you sure?`, `<button id='submit-deletion' class='btn btn-lg form-control' data-id='${id}' type='submit'>Yes</button>`)\n      abc.handlerDelete()\n    })\n  },\n\n  handlerLogCreateButton: () => {\n    $(\"#log-create-button\").click(e => {\n      ebot.showModal(\"New Log\", abc.getLogForm())\n      abc.handlerCreate()\n    })\n  },\n\n  handlerCreate: () => {\n    $(\"#submit\").click(e => {\n      let jsonData = JSON.stringify({\n        \"logId\": $(\"#log-id\").val(),\n        \"logName\": $(\"#log-name\").val(),\n        \"playerCharacterId\": $(\"#player-character-id\").val()\n      })\n\n      abc.createLog(jsonData).then(data => {\n        abc.getLogs().then(logs => {\n          abc.logs = logs\n          abc.createTable()\n          ebot.hideModal()\n        })\n      })\n    })\n  },\n\n  handlerUpdate: id => {\n    $(\"#submit\").click(e => {\n      let jsonData = JSON.stringify({\n        \"logId\": $(\"#log-id\").val(),\n        \"logName\": $(\"#log-name\").val(),\n        \"playerCharacterId\": $(\"#player-character-id\").val()\n      })\n\n      abc.updateLog(id, jsonData).then(data => {\n        abc.getLogs().then(logs => {\n          abc.logs = logs\n          abc.createTable()\n          ebot.hideModal()\n        })\n      })\n    })\n  },\n\n  handlerDelete: () => {\n    $(\"#submit-deletion\").click(e => {\n      let button = $(e.currentTarget)\n      let id = button.attr(\"data-id\")\n      abc.deleteLog(id).then(() => {\n        ebot.hideModal()\n        $(`tr[data-id=${id}]`).remove()\n      })\n    })\n  },\n\n  getLogForm: () => {\n    let htmlString = `\n    <label>Log Id</label> <input id='log-id' type='number' class='form-control'><br />\n    <label>Log Name</label> <input id='log-name' class='form-control'><br />\n    <label>Player Character Id</label> <input id='player-character-id' type='number' class='form-control'><br />\n    <button id='submit' class='form-control' type='submit'>Submit</button>`\n    return htmlString\n  },\n\n  fillLogFormWithOldData: id => {\n    abc.getLog(id).then(data => {\n      $(\"#log-id\").val(data.logId),\n      $(\"#log-name\").val(data.logName),\n      $(\"#player-character-id\").val(data.playerCharacterId)\n    })\n  },\n\n  getLogs: () => {\n    let deferred = $.ajax({\n      type: \"GET\",\n      url: `${abc.apiurl}/logs`,\n      success: function(data, status, jqXHR) {},\n      error: function(jqXHR, status) {console.log(\"getLogs() Error\")}\n    }).promise()\n\n    return deferred\n  },\n\n  createLog: jsonData => {\n    console.log(jsonData)\n    let deferred = $.ajax({\n      type: \"POST\",\n      url: `${abc.apiurl}/logs`,\n      data: abc.convertJsonToFormData(jsonData),\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n      success: (data, status, jqXHR) => {},\n      error: (jqXHR, status) => {\n        ebot.notify(\"error creating a Log\")\n        console.log(jqXHR)\n      }\n    }).promise()\n\n    return deferred\n  },\n\n  getLog: id => {\n    let deferred = $.ajax({\n      type: \"GET\",\n      url: `${abc.apiurl}/logs/${id}`,\n      success: function(data, status, jqXHR) {},\n      error: function(jqXHR, status) {console.log(\"getLog() Error\")}\n    }).promise()\n\n    return deferred\n  },\n\n  updateLog: (id, jsonData) => {\n    let deferred = $.ajax({\n      type: \"PUT\",\n      url: `${abc.apiurl}/logs/${id}`,\n      data: abc.convertJsonToFormData(jsonData),\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n      success: (data, status, jqXHR) => {},\n      error: (jqXHR, status) => {\n        ebot.notify(\"error updating a Log\")\n        console.log(jqXHR)\n      }\n    }).promise()\n\n    return deferred\n  },\n\n  deleteLog: id => {\n    let deferred = $.ajax({\n      type: \"DELETE\",\n      url: `${abc.apiurl}/logs/${id}`,\n      success: function(data, status, jqXHR) {},\n      error: function(jqXHR, status) {console.log(\"deleteLog() Error\")}\n    }).promise()\n\n    return deferred\n  },\n\n  convertJsonToFormData: json => {\n    let string = ``\n\n    json = JSON.parse(json)\n\n    for(let prop in json) {\n      let converted = `${prop}=${encodeURI(json[prop])}&`\n      converted = converted.replace(/%20/g, \"+\")\n      string += converted\n    }\n    string = string.replace(/&$/g, \"\")\n\n    return string\n  },\n\n  apiurl: \"http://localhost:8082\",\n\n  logs: []\n\n}"]}