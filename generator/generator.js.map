{"version":3,"sources":["generator-es6.js"],"names":[],"mappings":"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","file":"generator.js","sourcesContent":["//babel generator-es6.js --out-file generator.js\r\n//npm install --global babel-cli@5.8.26\r\n//npm install grunt-babel@^5.*.*\r\n\r\n// ${flect.camelize(flect.pluralize(def.name))}\r\n// ${flect.camelize(flect.pluralize(def.name), true)}\r\n// ${flect.titleize(flect.pluralize(def.name))}\r\n// ${flect.dasherize(flect.pluralize(def.name))}\r\n// ${flect.dasherize(def.name)}\r\n// ${flect.camelize(def.name)}\r\n// ${flect.camelize(def.name, true)}\r\n// ${flect.titleize(def.name)}\r\n\r\nlet fs = require('fs')\r\nlet flect = require('inflection')\r\nlet filepath = \"\"\r\n\r\nlet models = [\r\n  \"creature\",\r\n  \"non_player_character\",\r\n  \"player_character\",\r\n  \"item\",\r\n  \"log\",\r\n  \"log_entry\",\r\n  \"power\"\r\n]\r\n\r\nlet definitions = []\r\nlet readCount = 0\r\n\r\nmodels.forEach(model => {\r\n  filepath = `./definitions/${model}.js`\r\n\r\n  fs.readFile(filepath, 'utf8', (err, data) => {\r\n    if(err) {\r\n      console.error(\"Could not open file: %s\", err)\r\n      return\r\n    }\r\n\r\n    try {\r\n      let def = JSON.parse(data)\r\n      definitions.push(def)\r\n      readCount++\r\n\r\n      if(readCount === models.length) {\r\n        //trigger everything else\r\n        writeNodeFiles()\r\n        writeNodeSnippets()\r\n        writeTestFiles()\r\n      }\r\n\r\n    } catch(error) {\r\n      console.log(`problem with ${model}`)\r\n      console.log(error)\r\n      console.log(\"----------------------------\")\r\n    }\r\n    \r\n  })\r\n\r\n})\r\n\r\nlet writeNodeFiles = function() {\r\n  definitions.forEach(def => {\r\n    filepath = `./mongoose-models/${flect.dasherize(def.name)}.js`\r\n    fs.writeFile(filepath, createMongooseModel(def), err => {\r\n      if(err) console.error(\"Could not write file: %s\", err)\r\n    })\r\n\r\n    filepath = `./routes/routes-${flect.dasherize(def.name)}.js`\r\n    fs.writeFile(filepath, createRoute(def), err => {\r\n      if(err) console.error(\"Could not write file: %s\", err)\r\n    })\r\n\r\n    filepath = `../app/models/${flect.dasherize(def.name)}.js`\r\n    fs.writeFile(filepath, createMongooseModel(def), err => {\r\n      if(err) console.error(\"Could not write file: %s\", err)\r\n    })\r\n\r\n    filepath = `../app/routes-${flect.dasherize(def.name)}.js`\r\n    fs.writeFile(filepath, createRoute(def), err => {\r\n      if(err) console.error(\"Could not write file: %s\", err)\r\n    })\r\n  })\r\n}\r\n\r\n\r\n\r\nlet writeNodeSnippets = function() {\r\n  let output = ``\r\n\r\n  definitions.forEach(def => {\r\n    output += `require('./app/routes-${flect.dasherize(def.name)}.js')(app, passport)\\n`\r\n  })\r\n\r\n  output += `\\n`\r\n\r\n  definitions.forEach(def => {\r\n    output += `db.createCollection(\"${flect.pluralize(def.name)}\")\\n`\r\n  })\r\n\r\n\r\n  filepath = `./output/miscellaneous.js`\r\n  fs.writeFile(filepath, output, err => {\r\n    if(err) console.error(\"Could not write file: %s\", err)\r\n  })\r\n}\r\n\r\n\r\n\r\nlet writeTestFiles = function() {\r\n  let output = ``\r\n  definitions.forEach(def => {\r\n    output += createTestRow(def)\r\n  })\r\n\r\n  let filepath = `./output/test-table-rows.js`\r\n  fs.writeFile(filepath, output, err => {\r\n    if(err) console.error(\"Could not write file: %s\", err)\r\n  })\r\n\r\n  filepath = `./output/test-js.js`\r\n  output = createInitialHandlers()\r\n\r\n  output += \"\\n\\n\\n\"\r\n\r\n  // output += createFrontEndTestHandler(definitions[0])\r\n  definitions.forEach(def => {\r\n    output += createFrontEndTestHandler(def)\r\n  })\r\n\r\n  fs.writeFile(filepath, output, err => {\r\n    if(err) console.error(\"Could not write file: %s\", err)\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet createInitialHandlers = function() {\r\n  let output = ``\r\n  definitions.forEach(def => {\r\n    output += `abc.handlerTest${flect.camelize(flect.pluralize(def.name))}()\\n`\r\n    output += `abc.handlerTestCreate${flect.camelize(def.name)}()\\n`\r\n    output += `abc.handlerTestGet${flect.camelize(def.name)}()\\n`\r\n    output += `abc.handlerTestPut${flect.camelize(def.name)}()\\n`\r\n    output += `abc.handlerTestDelete${flect.camelize(def.name)}()\\n`\r\n  })\r\n  return output\r\n}\r\n\r\n\r\n\r\n\r\nlet createFrontEndTestHandler = function(def) {\r\n  let output = ``\r\n\r\n  output +=`  handlerTest${flect.camelize(flect.pluralize(def.name))}: () => {\r\n    $(\"#test-${flect.dasherize(flect.pluralize(def.name))}\").click(e => {\r\n      abc.get${flect.camelize(flect.pluralize(def.name))}().then(data => {\r\n        console.log(data)\r\n      })\r\n    })\r\n  },\r\n\r\n  handlerTestCreate${flect.camelize(def.name)}: () => {\r\n    $(\"#test-create-${flect.dasherize(def.name)}\").click(e => {\\n`\r\n\r\n  for(let prop in def.properties) {\r\n    output += `      let ${flect.camelize(prop, true)} = \"${def.properties[prop].testValue}\"\\n`\r\n  }\r\n\r\n  output +=`\\n      let jsonData = JSON.stringify({\\n`\r\n\r\n  for(let prop in def.properties) {\r\n    output += `        \"${flect.camelize(prop, true)}\": ${flect.camelize(prop, true)},\\n`\r\n  }\r\n  output = output.replace(/(,\\n$)/g, \"\\n\")\r\n\r\n  output +=`      })\r\n\r\n      abc.create${flect.camelize(def.name)}(jsonData).then(data => {\r\n        console.log(data)\r\n        $(\"#${flect.dasherize(def.name)}-id\").html(data.obj._id)\r\n      })\r\n    })\r\n  },\r\n\r\n  handlerTestGet${flect.camelize(def.name)}: () => {\r\n    $(\"#test-get-${flect.dasherize(def.name)}\").click(e => {\r\n      let id = $(\"#${flect.dasherize(def.name)}-id\").html()\r\n      \r\n      abc.get${flect.camelize(def.name)}(id).then(data => {\r\n        console.log(data)\r\n      })\r\n\r\n    })\r\n  },\r\n\r\n  handlerTestPut${flect.camelize(def.name)}: () => {\r\n    $(\"#test-put-${flect.dasherize(def.name)}\").click(e => {\r\n      let id = $(\"#${flect.dasherize(def.name)}-id\").html()\\n\\n`\r\n      \r\n  for(let prop in def.properties) {\r\n    output += `      let ${flect.camelize(prop, true)} = \"${def.properties[prop].updateValue}\"\\n`\r\n  }\r\n\r\n  output +=`\\n      let jsonData = JSON.stringify({\\n`\r\n\r\n  for(let prop in def.properties) {\r\n    output += `        \"${flect.camelize(prop, true)}\": ${flect.camelize(prop, true)},\\n`\r\n  }\r\n  output = output.replace(/(,\\n$)/g, \"\\n\")\r\n\r\n  output +=`      })\r\n\r\n      abc.put${flect.camelize(def.name)}(id, jsonData).then(data => {\r\n        console.log(data)\r\n      })\r\n    })\r\n  },\r\n\r\n  handlerTestDelete${flect.camelize(def.name)}: id => {\r\n    $(\"#test-delete-${flect.dasherize(def.name)}\").click(e => {\r\n      let id = $(\"#${flect.dasherize(def.name)}-id\").html()\r\n      \r\n      abc.delete${flect.camelize(def.name)}(id).then(() => {\r\n        console.log(\"deleted!\")\r\n      })\r\n\r\n    })\r\n  },\r\n\r\n  get${flect.camelize(flect.pluralize(def.name))}: () => {\r\n    let deferred = $.ajax({\r\n      type: \"GET\",\r\n      url: \\`\\$\\{abc.apiurl\\}/${flect.camelize(flect.pluralize(def.name), true)}\\`,\r\n      success: function(data, status, jqXHR) {},\r\n      error: function(jqXHR, status) {console.log(\"get${flect.camelize(flect.pluralize(def.name))}() Error\")}\r\n    }).promise()\r\n\r\n    return deferred\r\n  },\r\n\r\n  create${flect.camelize(def.name)}: jsonData => {\r\n    let deferred = $.ajax({\r\n      type: \"POST\",\r\n      url: \\`\\$\\{abc.apiurl\\}/${flect.camelize(flect.pluralize(def.name), true)}\\`,\r\n      data: abc.convertJsonToFormData(jsonData),\r\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n      success: (data, status, jqXHR) => {},\r\n      error: (jqXHR, status) => {\r\n        ebot.notify(\"error creating a ${flect.humanize(def.name)}\")\r\n        console.log(jqXHR)\r\n      }\r\n    }).promise()\r\n\r\n    return deferred\r\n  },\r\n\r\n  get${flect.camelize(def.name)}: id => {\r\n    let deferred = $.ajax({\r\n      type: \"GET\",\r\n      url: \\`\\$\\{abc.apiurl\\}/${flect.camelize(flect.pluralize(def.name), true)}/\\$\\{id\\}\\`,\r\n      success: function(data, status, jqXHR) {},\r\n      error: function(jqXHR, status) {console.log(\"get${flect.camelize(def.name)}() Error\")}\r\n    }).promise()\r\n\r\n    return deferred\r\n  },\r\n\r\n  put${flect.camelize(def.name)}: (id, jsonData) => {\r\n    let deferred = $.ajax({\r\n      type: \"PUT\",\r\n      url: \\`\\$\\{abc.apiurl\\}/${flect.camelize(flect.pluralize(def.name), true)}/\\$\\{id\\}\\`,\r\n      data: abc.convertJsonToFormData(jsonData),\r\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n      success: (data, status, jqXHR) => {},\r\n      error: (jqXHR, status) => {\r\n        ebot.notify(\"error updating a ${flect.humanize(def.name)}\")\r\n        console.log(jqXHR)\r\n      }\r\n    }).promise()\r\n\r\n    return deferred\r\n  },\r\n\r\n  delete${flect.camelize(def.name)}: id => {\r\n    let deferred = $.ajax({\r\n      type: \"DELETE\",\r\n      url: \\`\\$\\{abc.apiurl\\}/${flect.camelize(flect.pluralize(def.name), true)}/\\$\\{id\\}\\`,\r\n      success: function(data, status, jqXHR) {},\r\n      error: function(jqXHR, status) {console.log(\"delete${flect.camelize(def.name)}() Error\")}\r\n    }).promise()\r\n\r\n    return deferred\r\n  },\\n\\n`\r\n\r\n  return output\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet createTestRow = function(def) {\r\n\r\n  let string = `\r\n  <tr>\r\n    <td><button id='test-${flect.dasherize(flect.pluralize(def.name), true)}' class='btn btn-md'>Test ${flect.titleize(flect.pluralize(def.name))}</button></td>\r\n    <td><button id='test-create-${flect.dasherize(def.name)}' class='btn btn-md'>Test Create ${flect.titleize(def.name, true)}</button></td>\r\n    <td><button id='test-get-${flect.dasherize(def.name)}' class='btn btn-md'>Test Get ${flect.titleize(def.name, true)}</button></td>\r\n    <td><button id='test-put-${flect.dasherize(def.name)}' class='btn btn-md'>Test Put ${flect.titleize(def.name, true)}</button></td>\r\n    <td><button id='test-delete-${flect.dasherize(def.name)}' class='btn btn-md'>Test Delete ${flect.titleize(def.name, true)}</button></td>\r\n    <td><div id='${flect.dasherize(def.name)}-id'></div></td>\r\n  </tr>\r\n\r\n  `\r\n\r\n  return string\r\n}\r\n\r\n\r\n\r\n\r\nlet createMongooseModel = function(def) {\r\n  let string = ``\r\n\r\n  string += `\r\nvar mongoose = require('mongoose')\r\nvar Schema = mongoose.Schema\r\n\r\nvar ${flect.camelize(def.name, true)}Schema = new Schema({\\n`\r\n\r\n  for(let prop in def.properties) {\r\n    string += `  ${flect.camelize(prop, true)}: String,\\n`\r\n  }\r\n  string = string.replace(/(,\\n$)/g, \"\\n\")\r\n\r\n  string += `})\r\n\r\nmodule.exports = mongoose.model('${flect.camelize(def.name)}', ${flect.camelize(def.name, true)}Schema)`\r\n\r\n  return string\r\n}\r\n\r\n\r\n\r\nlet createRoute = function(def) {\r\n\r\n  let string = `\r\n  \r\n  var ${flect.camelize(def.name)} = require('../app/models/${flect.dasherize(def.name)}')\r\n\r\n  module.exports = function(app, passport) {\r\n\r\n    app.get('/${flect.camelize(flect.pluralize(def.name), true)}', function(req, res) {\r\n      ${flect.camelize(def.name)}.find(function(err, ${flect.camelize(flect.pluralize(def.name), true)}) {\r\n        if(err)\r\n          res.send(err)\r\n        res.json(${flect.camelize(flect.pluralize(def.name), true)})\r\n      })\r\n    })\r\n\r\n    app.post('/${flect.camelize(flect.pluralize(def.name), true)}', function(req, res) {\r\n      var ${flect.camelize(def.name, true)} = new ${flect.camelize(def.name)}()\\n\\n`\r\n\r\n  for(let prop in def.properties) {\r\n    string += `      ${flect.camelize(def.name, true)}.${flect.camelize(prop, true)} = req.body.${flect.camelize(prop, true)}\\n`\r\n  }\r\n\r\n  string += `\\n      ${flect.camelize(def.name, true)}.save(function(err) {\r\n        if(err)\r\n          res.send(err)\r\n        res.json({message: '${flect.humanize(def.name)} created!', obj: ${flect.camelize(def.name, true)}})\r\n      })\r\n    })\r\n\r\n    app.get('/${flect.camelize(flect.pluralize(def.name), true)}/:${def.name}_id', function(req, res) {\r\n      ${flect.camelize(def.name)}.findById(req.params.${def.name}_id, function(err, ${flect.camelize(def.name, true)}) {\r\n        if(err)\r\n          res.send(err)\r\n        res.json(${flect.camelize(def.name, true)})\r\n      })\r\n    })\r\n\r\n    app.put('/${flect.camelize(flect.pluralize(def.name), true)}/:${def.name}_id', function(req, res) {\r\n      ${flect.camelize(def.name)}.findById(req.params.${def.name}_id, function(err, ${flect.camelize(def.name, true)}) {\\n\\n`\r\n\r\n\r\n  for(let prop in def.properties) {\r\n    string += `        ${flect.camelize(def.name, true)}.${flect.camelize(prop, true)} = req.body.${flect.camelize(prop, true)}\\n`\r\n  }\r\n\r\n  string +=`\\n        ${flect.camelize(def.name, true)}.save(function(err) {\r\n          if(err)\r\n            res.send(err)\r\n          res.json({message: '${flect.humanize(def.name)} updated!', obj: ${flect.camelize(def.name, true)}})\r\n        })\r\n      })\r\n    })\r\n\r\n    app.delete('/${flect.camelize(flect.pluralize(def.name), true)}/:${def.name}_id', function(req, res) {\r\n      ${flect.camelize(def.name)}.remove({_id: req.params.${def.name}_id}, function(err, ${flect.camelize(def.name, true)}) {\r\n        if(err)\r\n          res.send(err)\r\n        res.json({message: 'Successfully deleted'})\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  `\r\n\r\n\r\n  return string\r\n}"]}