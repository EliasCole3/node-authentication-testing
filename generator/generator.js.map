{"version":3,"sources":["generator-es6.js"],"names":[],"mappings":"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","file":"generator.js","sourcesContent":["//babel generator-es6.js --out-file generator.js\r\n//npm install --global babel-cli@5.8.26\r\n//npm install grunt-babel@^5.*.*\r\n\r\n// ${flect.camelize(flect.pluralize(def.name))}\r\n// ${flect.camelize(flect.pluralize(def.name), true)}\r\n// ${flect.titleize(flect.pluralize(def.name))}\r\n// ${flect.dasherize(flect.pluralize(def.name))}\r\n// ${flect.underscore(flect.pluralize(def.name))}\r\n// ${flect.dasherize(def.name)}\r\n// ${flect.camelize(def.name)}\r\n// ${flect.camelize(def.name, true)}\r\n// ${flect.titleize(def.name)}\r\n\r\n// for(let prop in def.properties) {\r\n//   output += ``\r\n// }\r\n\r\nlet fs = require('fs')\r\nlet flect = require('inflection')\r\nlet filepath = \"\"\r\n\r\nlet models = [\r\n  \"creature\",\r\n  \"non_player_character\",\r\n  \"player_character\",\r\n  \"item\",\r\n  \"log\",\r\n  \"log_entry\",\r\n  \"power\"\r\n]\r\n\r\n// let models = [\r\n//   \"item\"\r\n// ]\r\n\r\nlet definitions = []\r\nlet readCount = 0\r\n\r\nmodels.forEach(model => {\r\n  filepath = `./definitions/${model}.js`\r\n\r\n  fs.readFile(filepath, 'utf8', (err, data) => {\r\n    if(err) {\r\n      console.error(\"Could not open file: %s\", err)\r\n      return\r\n    }\r\n\r\n    try {\r\n      let def = JSON.parse(data)\r\n      definitions.push(def)\r\n      readCount++\r\n\r\n      if(readCount === models.length) {\r\n        //trigger everything else\r\n        writeNodeFiles()\r\n        writeNodeSnippets()\r\n        writeTestFiles()\r\n        writeCrudFiles()\r\n      }\r\n\r\n    } catch(error) {\r\n      console.log(`problem with ${model}`)\r\n      console.log(error)\r\n      console.log(\"----------------------------\")\r\n    }\r\n    \r\n  })\r\n\r\n})\r\n\r\nlet writeNodeFiles = () => {\r\n  definitions.forEach(def => {\r\n    filepath = `./mongoose-models/${flect.dasherize(def.name)}.js`\r\n    fs.writeFile(filepath, createMongooseModel(def), err => {\r\n      if(err) console.error(\"Could not write file: %s\", err)\r\n    })\r\n\r\n    filepath = `./routes/routes-${flect.dasherize(def.name)}.js`\r\n    fs.writeFile(filepath, createRoute(def), err => {\r\n      if(err) console.error(\"Could not write file: %s\", err)\r\n    })\r\n\r\n    filepath = `../app/models/${flect.dasherize(def.name)}.js`\r\n    fs.writeFile(filepath, createMongooseModel(def), err => {\r\n      if(err) console.error(\"Could not write file: %s\", err)\r\n    })\r\n\r\n    filepath = `../app/routes-${flect.dasherize(def.name)}.js`\r\n    fs.writeFile(filepath, createRoute(def), err => {\r\n      if(err) console.error(\"Could not write file: %s\", err)\r\n    })\r\n  })\r\n}\r\n\r\n\r\n\r\nlet writeNodeSnippets = () => {\r\n  let output = ``\r\n\r\n  definitions.forEach(def => {\r\n    output += `require('./app/routes-${flect.dasherize(def.name)}.js')(app, passport)\\n`\r\n  })\r\n\r\n  output += `\\n`\r\n\r\n  definitions.forEach(def => {\r\n    output += `db.createCollection(\"${flect.pluralize(def.name)}\")\\n`\r\n  })\r\n\r\n\r\n  filepath = `./output/miscellaneous.js`\r\n  fs.writeFile(filepath, output, err => {\r\n    if(err) console.error(\"Could not write file: %s\", err)\r\n  })\r\n}\r\n\r\n\r\n\r\nlet writeTestFiles = () => {\r\n  let output = ``\r\n  definitions.forEach(def => {\r\n    output += createTestRow(def)\r\n  })\r\n\r\n  let filepath = `./output/test-table-rows.js`\r\n  fs.writeFile(filepath, output, err => {\r\n    if(err) console.error(\"Could not write file: %s\", err)\r\n  })\r\n\r\n  filepath = `./output/test-js.js`\r\n  output = createInitialHandlers()\r\n\r\n  output += \"\\n\\n\\n\"\r\n\r\n  // output += createFrontEndTestHandler(definitions[0])\r\n  definitions.forEach(def => {\r\n    output += createFrontEndTestHandler(def)\r\n  })\r\n\r\n  fs.writeFile(filepath, output, err => {\r\n    if(err) console.error(\"Could not write file: %s\", err)\r\n  })\r\n}\r\n\r\n\r\nlet writeCrudFiles = () => {\r\n  definitions.forEach(def => {\r\n    // filepath = `./crud-files/crud-${flect.dasherize(flect.pluralize(def.name))}-es6.js`\r\n    filepath = `../js/crud-${flect.dasherize(flect.pluralize(def.name))}-es6.js`\r\n    fs.writeFile(filepath, createCrudViewJS(def), err => {if(err) console.error(\"Could not write file: %s\", err)})\r\n  })\r\n\r\n  let output = ``\r\n  definitions.forEach(def => {\r\n    output += createCrudRoutes(def)\r\n  })\r\n\r\n  filepath = `./output/crud-routes.js`\r\n  fs.writeFile(filepath, output, err => {if(err) console.error(\"Could not write file: %s\", err)})\r\n\r\n\r\n  output = ``\r\n  definitions.forEach(def => {\r\n    output += createCrudGruntFileAdditions(def)\r\n  })\r\n\r\n  filepath = `./output/crud-grunt-file-additions.js`\r\n  fs.writeFile(filepath, output, err => {if(err) console.error(\"Could not write file: %s\", err)})\r\n\r\n\r\n  definitions.forEach(def => {\r\n    // filepath = `./crud-views/${flect.dasherize(flect.pluralize(def.name))}.ejs`\r\n    filepath = `../views/CRUD/${flect.dasherize(flect.pluralize(def.name))}.ejs`\r\n    fs.writeFile(filepath, createCrudView(def), err => {if(err) console.error(\"Could not write file: %s\", err)})\r\n  })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nlet createInitialHandlers = () => {\r\n  let output = ``\r\n  definitions.forEach(def => {\r\n    output += `abc.handlerTest${flect.camelize(flect.pluralize(def.name))}()\\n`\r\n    output += `abc.handlerTestCreate${flect.camelize(def.name)}()\\n`\r\n    output += `abc.handlerTestGet${flect.camelize(def.name)}()\\n`\r\n    output += `abc.handlerTestPut${flect.camelize(def.name)}()\\n`\r\n    output += `abc.handlerTestDelete${flect.camelize(def.name)}()\\n`\r\n  })\r\n  return output\r\n}\r\n\r\n\r\n\r\n\r\nlet createFrontEndTestHandler = def => {\r\n  let output = ``\r\n\r\n  output +=`  handlerTest${flect.camelize(flect.pluralize(def.name))}: () => {\r\n    $(\"#test-${flect.dasherize(flect.pluralize(def.name))}\").click(e => {\r\n      abc.get${flect.camelize(flect.pluralize(def.name))}().then(data => {\r\n        console.log(data)\r\n      })\r\n    })\r\n  },\r\n\r\n  handlerTestCreate${flect.camelize(def.name)}: () => {\r\n    $(\"#test-create-${flect.dasherize(def.name)}\").click(e => {\\n`\r\n\r\n  for(let prop in def.properties) {\r\n    output += `      let ${flect.camelize(prop, true)} = \"${def.properties[prop].testValue}\"\\n`\r\n  }\r\n\r\n  output +=`\\n      let jsonData = JSON.stringify({\\n`\r\n\r\n  for(let prop in def.properties) {\r\n    output += `        \"${flect.camelize(prop, true)}\": ${flect.camelize(prop, true)},\\n`\r\n  }\r\n  output = output.replace(/(,\\n$)/g, \"\\n\")\r\n\r\n  output +=`      })\r\n\r\n      abc.create${flect.camelize(def.name)}(jsonData).then(data => {\r\n        console.log(data)\r\n        $(\"#${flect.dasherize(def.name)}-id\").html(data.obj._id)\r\n      })\r\n    })\r\n  },\r\n\r\n  handlerTestGet${flect.camelize(def.name)}: () => {\r\n    $(\"#test-get-${flect.dasherize(def.name)}\").click(e => {\r\n      let id = $(\"#${flect.dasherize(def.name)}-id\").html()\r\n      \r\n      abc.get${flect.camelize(def.name)}(id).then(data => {\r\n        console.log(data)\r\n      })\r\n\r\n    })\r\n  },\r\n\r\n  handlerTestPut${flect.camelize(def.name)}: () => {\r\n    $(\"#test-put-${flect.dasherize(def.name)}\").click(e => {\r\n      let id = $(\"#${flect.dasherize(def.name)}-id\").html()\\n\\n`\r\n      \r\n  for(let prop in def.properties) {\r\n    output += `      let ${flect.camelize(prop, true)} = \"${def.properties[prop].updateValue}\"\\n`\r\n  }\r\n\r\n  output +=`\\n      let jsonData = JSON.stringify({\\n`\r\n\r\n  for(let prop in def.properties) {\r\n    output += `        \"${flect.camelize(prop, true)}\": ${flect.camelize(prop, true)},\\n`\r\n  }\r\n  output = output.replace(/(,\\n$)/g, \"\\n\")\r\n\r\n  output +=`      })\r\n\r\n      abc.put${flect.camelize(def.name)}(id, jsonData).then(data => {\r\n        console.log(data)\r\n      })\r\n    })\r\n  },\r\n\r\n  handlerTestDelete${flect.camelize(def.name)}: id => {\r\n    $(\"#test-delete-${flect.dasherize(def.name)}\").click(e => {\r\n      let id = $(\"#${flect.dasherize(def.name)}-id\").html()\r\n      \r\n      abc.delete${flect.camelize(def.name)}(id).then(() => {\r\n        console.log(\"deleted!\")\r\n      })\r\n\r\n    })\r\n  },\r\n\r\n  get${flect.camelize(flect.pluralize(def.name))}: () => {\r\n    let deferred = $.ajax({\r\n      type: \"GET\",\r\n      url: \\`\\$\\{abc.apiurl\\}/${flect.camelize(flect.pluralize(def.name), true)}\\`,\r\n      success: function(data, status, jqXHR) {},\r\n      error: function(jqXHR, status) {console.log(\"get${flect.camelize(flect.pluralize(def.name))}() Error\")}\r\n    }).promise()\r\n\r\n    return deferred\r\n  },\r\n\r\n  create${flect.camelize(def.name)}: jsonData => {\r\n    let deferred = $.ajax({\r\n      type: \"POST\",\r\n      url: \\`\\$\\{abc.apiurl\\}/${flect.camelize(flect.pluralize(def.name), true)}\\`,\r\n      data: abc.convertJsonToFormData(jsonData),\r\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n      success: (data, status, jqXHR) => {},\r\n      error: (jqXHR, status) => {\r\n        ebot.notify(\"error creating a ${flect.humanize(def.name)}\")\r\n        console.log(jqXHR)\r\n      }\r\n    }).promise()\r\n\r\n    return deferred\r\n  },\r\n\r\n  get${flect.camelize(def.name)}: id => {\r\n    let deferred = $.ajax({\r\n      type: \"GET\",\r\n      url: \\`\\$\\{abc.apiurl\\}/${flect.camelize(flect.pluralize(def.name), true)}/\\$\\{id\\}\\`,\r\n      success: function(data, status, jqXHR) {},\r\n      error: function(jqXHR, status) {console.log(\"get${flect.camelize(def.name)}() Error\")}\r\n    }).promise()\r\n\r\n    return deferred\r\n  },\r\n\r\n  put${flect.camelize(def.name)}: (id, jsonData) => {\r\n    let deferred = $.ajax({\r\n      type: \"PUT\",\r\n      url: \\`\\$\\{abc.apiurl\\}/${flect.camelize(flect.pluralize(def.name), true)}/\\$\\{id\\}\\`,\r\n      data: abc.convertJsonToFormData(jsonData),\r\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n      success: (data, status, jqXHR) => {},\r\n      error: (jqXHR, status) => {\r\n        ebot.notify(\"error updating a ${flect.humanize(def.name)}\")\r\n        console.log(jqXHR)\r\n      }\r\n    }).promise()\r\n\r\n    return deferred\r\n  },\r\n\r\n  delete${flect.camelize(def.name)}: id => {\r\n    let deferred = $.ajax({\r\n      type: \"DELETE\",\r\n      url: \\`\\$\\{abc.apiurl\\}/${flect.camelize(flect.pluralize(def.name), true)}/\\$\\{id\\}\\`,\r\n      success: function(data, status, jqXHR) {},\r\n      error: function(jqXHR, status) {console.log(\"delete${flect.camelize(def.name)}() Error\")}\r\n    }).promise()\r\n\r\n    return deferred\r\n  },\\n\\n`\r\n\r\n  return output\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet createTestRow = def => {\r\n\r\n  let string = `\r\n  <tr>\r\n    <td><button id='test-${flect.dasherize(flect.pluralize(def.name), true)}' class='btn btn-md'>Test ${flect.titleize(flect.pluralize(def.name))}</button></td>\r\n    <td><button id='test-create-${flect.dasherize(def.name)}' class='btn btn-md'>Test Create ${flect.titleize(def.name, true)}</button></td>\r\n    <td><button id='test-get-${flect.dasherize(def.name)}' class='btn btn-md'>Test Get ${flect.titleize(def.name, true)}</button></td>\r\n    <td><button id='test-put-${flect.dasherize(def.name)}' class='btn btn-md'>Test Put ${flect.titleize(def.name, true)}</button></td>\r\n    <td><button id='test-delete-${flect.dasherize(def.name)}' class='btn btn-md'>Test Delete ${flect.titleize(def.name, true)}</button></td>\r\n    <td><div id='${flect.dasherize(def.name)}-id'></div></td>\r\n  </tr>\r\n\r\n  `\r\n\r\n  return string\r\n}\r\n\r\n\r\n\r\n\r\nlet createMongooseModel = def => {\r\n  let string = ``\r\n\r\n  string += `\r\nvar mongoose = require('mongoose')\r\nvar Schema = mongoose.Schema\r\n\r\nvar ${flect.camelize(def.name, true)}Schema = new Schema({\\n`\r\n\r\n  for(let prop in def.properties) {\r\n    string += `  ${flect.camelize(prop, true)}: String,\\n`\r\n  }\r\n  string = string.replace(/(,\\n$)/g, \"\\n\")\r\n\r\n  string += `})\r\n\r\nmodule.exports = mongoose.model('${flect.camelize(def.name)}', ${flect.camelize(def.name, true)}Schema, '${flect.pluralize(def.name)}')`\r\n\r\n  return string\r\n}\r\n\r\n\r\n\r\nlet createRoute = def => {\r\n\r\n  let string = `\r\n  \r\n  var ${flect.camelize(def.name)} = require('../app/models/${flect.dasherize(def.name)}')\r\n\r\n  module.exports = function(app, passport) {\r\n\r\n    app.get('/${flect.camelize(flect.pluralize(def.name), true)}', function(req, res) {\r\n      ${flect.camelize(def.name)}.find(function(err, ${flect.camelize(flect.pluralize(def.name), true)}) {\r\n        if(err)\r\n          res.send(err)\r\n        res.json(${flect.camelize(flect.pluralize(def.name), true)})\r\n      })\r\n    })\r\n\r\n    app.post('/${flect.camelize(flect.pluralize(def.name), true)}', function(req, res) {\r\n      var ${flect.camelize(def.name, true)} = new ${flect.camelize(def.name)}()\\n\\n`\r\n\r\n  for(let prop in def.properties) {\r\n    string += `      ${flect.camelize(def.name, true)}.${flect.camelize(prop, true)} = req.body.${flect.camelize(prop, true)}\\n`\r\n  }\r\n\r\n  string += `\\n      ${flect.camelize(def.name, true)}.save(function(err) {\r\n        if(err)\r\n          res.send(err)\r\n        res.json({message: '${flect.humanize(def.name)} created!', obj: ${flect.camelize(def.name, true)}})\r\n      })\r\n    })\r\n\r\n    app.get('/${flect.camelize(flect.pluralize(def.name), true)}/:${def.name}_id', function(req, res) {\r\n      ${flect.camelize(def.name)}.findById(req.params.${def.name}_id, function(err, ${flect.camelize(def.name, true)}) {\r\n        if(err)\r\n          res.send(err)\r\n        res.json(${flect.camelize(def.name, true)})\r\n      })\r\n    })\r\n\r\n    app.put('/${flect.camelize(flect.pluralize(def.name), true)}/:${def.name}_id', function(req, res) {\r\n      ${flect.camelize(def.name)}.findById(req.params.${def.name}_id, function(err, ${flect.camelize(def.name, true)}) {\\n\\n`\r\n\r\n\r\n  for(let prop in def.properties) {\r\n    string += `        ${flect.camelize(def.name, true)}.${flect.camelize(prop, true)} = req.body.${flect.camelize(prop, true)}\\n`\r\n  }\r\n\r\n  string +=`\\n        ${flect.camelize(def.name, true)}.save(function(err) {\r\n          if(err)\r\n            res.send(err)\r\n          res.json({message: '${flect.humanize(def.name)} updated!', obj: ${flect.camelize(def.name, true)}})\r\n        })\r\n      })\r\n    })\r\n\r\n    app.delete('/${flect.camelize(flect.pluralize(def.name), true)}/:${def.name}_id', function(req, res) {\r\n      ${flect.camelize(def.name)}.remove({_id: req.params.${def.name}_id}, function(err, ${flect.camelize(def.name, true)}) {\r\n        if(err)\r\n          res.send(err)\r\n        res.json({message: 'Successfully deleted'})\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  `\r\n\r\n\r\n  return string\r\n}\r\n\r\n\r\n\r\nlet createCrudViewJS = def => {\r\n  let output = `$(() => {\r\n  abc.initialize()\r\n  // ebot.updateDocumentation(abc)\r\n})\r\n\r\nlet abc = {\r\n  \r\n  initialize: () => {\r\n    abc.assignInitialHandlers()\r\n    ebot.insertModalHtml()\r\n  },\r\n\r\n  assignInitialHandlers: () => {\r\n    abc.handler${flect.camelize(def.name)}CreateButton()\r\n    abc.get${flect.camelize(flect.pluralize(def.name))}().then(${flect.camelize(flect.pluralize(def.name), true)} => {\r\n      abc.${flect.camelize(flect.pluralize(def.name), true)} = ${flect.camelize(flect.pluralize(def.name), true)}\r\n      abc.createTable()\r\n    })\r\n  },\r\n\r\n  createTable: () => {\r\n    let htmlString = \\`<table id='${flect.dasherize(def.name)}-table' class='table'>\\`\r\n\r\n    htmlString += \\`\r\n    <tr>\\n`\r\n\r\n    for(let prop in def.properties) {\r\n      output += `      <th>${flect.titleize(prop)}</th>\\n`\r\n    }\r\n      // <th>Item Id</th>\r\n      // <th>Name</th>\r\n      // <th>Cost</th>\r\n      // <th>Effect</th>\r\n      // <th>Flavor Text</th>\r\n      // <th>Image Filename</th>\r\n  output += `      <th></th>\r\n      <th></th>\r\n    </tr>\\`\r\n\r\n    abc.${flect.camelize(flect.pluralize(def.name), true)}.forEach(${flect.camelize(def.name, true)} => {\r\n      htmlString += \\`<tr data-id='\\$\\{${flect.camelize(def.name, true)}._id\\}'>\\`\\n`\r\n  \r\n  \r\n      for(let prop in def.properties) {\r\n        output += `      htmlString += \\`<td>\\$\\{${flect.camelize(def.name, true)}.${flect.camelize(prop, true)}\\}</td>\\`\\n`\r\n      }\r\n      // htmlString += \\`<td>\\$\\{item.itemId\\}</td>\\`\r\n      // htmlString += \\`<td>\\$\\{item.name\\}</td>\\`\r\n      // htmlString += \\`<td>\\$\\{item.cost\\}</td>\\`\r\n      // htmlString += \\`<td>\\$\\{item.effect\\}</td>\\`\r\n      // htmlString += \\`<td>\\$\\{item.flavorText\\}</td>\\`\r\n      // htmlString += \\`<td>\\$\\{item.imageFilename\\}</td>\\`\r\n\r\n  output += `      htmlString += \\`<td><button class='btn btn-sm update-${flect.dasherize(def.name)}' data-id='\\$\\{${flect.camelize(def.name, true)}._id\\}'>Update</button></td>\\`\r\n      htmlString += \\`<td><button class='btn btn-sm delete-${flect.dasherize(def.name)}' data-id='\\$\\{${flect.camelize(def.name, true)}._id\\}'>Delete</button></td>\\`\r\n      htmlString += \\`</tr>\\`\r\n    })\r\n\r\n\r\n    htmlString += \\`</table>\\`\r\n    $(\"#${flect.dasherize(def.name)}-table-wrapper\").html(htmlString)\r\n    abc.handler${flect.camelize(def.name)}Table()\r\n  },\r\n\r\n  handler${flect.camelize(def.name)}Table: () => {\r\n    $(\".update-${flect.dasherize(def.name)}\").click(e => {\r\n      let button = $(e.currentTarget)\r\n      let id = button.attr(\"data-id\")\r\n      ebot.showModal(\\`Update ${flect.titleize(def.name)}\\`, abc.get${flect.camelize(def.name)}Form())\r\n      abc.fill${flect.camelize(def.name)}FormWithOldData(id)\r\n      abc.handlerUpdate(id)\r\n    })\r\n\r\n    $(\".delete-${flect.dasherize(def.name)}\").click(e => {\r\n      let button = $(e.currentTarget)\r\n      let id = button.attr(\"data-id\")\r\n      ebot.showModal(\\`Are you sure?\\`, \\`<button id='submit-deletion' class='btn btn-lg form-control' data-id='\\$\\{id\\}' type='submit'>Yes</button>\\`)\r\n      abc.handlerDelete()\r\n    })\r\n  },\r\n\r\n  handler${flect.camelize(def.name)}CreateButton: () => {\r\n    $(\"#${flect.dasherize(def.name)}-create-button\").click(e => {\r\n      ebot.showModal(\"New ${flect.titleize(def.name)}\", abc.get${flect.camelize(def.name)}Form())\r\n      abc.handlerCreate()\r\n    })\r\n  },\r\n\r\n  handlerCreate: () => {\r\n    $(\"#submit\").click(e => {\r\n      let jsonData = JSON.stringify({\\n`\r\n\r\n        for(let prop in def.properties) {\r\n          output += `        \"${flect.camelize(prop, true)}\": $(\"#${flect.dasherize(prop)}\").val(),\\n`\r\n        }\r\n        output = output.replace(/,\\n$/g, \"\\n\")\r\n\r\n        // \"itemId\": $(\"#item-id\").val(),\r\n        // \"name\": $(\"#name\").val(),\r\n        // \"cost\": $(\"#cost\").val(),\r\n        // \"flavorText\": $(\"#flavor-text\").val(),\r\n        // \"effect\": $(\"#effect\").val(),\r\n        // \"imageFilename\": $(\"#image-filename\").val()\r\n\r\n  output += `      })\r\n\r\n      abc.create${flect.camelize(def.name)}(jsonData).then(data => {\r\n        abc.get${flect.camelize(flect.pluralize(def.name))}().then(${flect.camelize(flect.pluralize(def.name), true)} => {\r\n          abc.${flect.camelize(flect.pluralize(def.name), true)} = ${flect.camelize(flect.pluralize(def.name), true)}\r\n          abc.createTable()\r\n          ebot.hideModal()\r\n        })\r\n      })\r\n    })\r\n  },\r\n\r\n  handlerUpdate: id => {\r\n    $(\"#submit\").click(e => {\r\n      let jsonData = JSON.stringify({\\n`\r\n\r\n        for(let prop in def.properties) {\r\n          output += `        \"${flect.camelize(prop, true)}\": $(\"#${flect.dasherize(prop)}\").val(),\\n`\r\n        }\r\n        output = output.replace(/,\\n$/g, \"\\n\")\r\n\r\n        // \"itemId\": $(\"#item-id\").val(),\r\n        // \"name\": $(\"#name\").val(),\r\n        // \"cost\": $(\"#cost\").val(),\r\n        // \"flavorText\": $(\"#flavor-text\").val(),\r\n        // \"effect\": $(\"#effect\").val(),\r\n        // \"imageFilename\": $(\"#image-filename\").val()\r\n  output += `      })\r\n\r\n      abc.update${flect.camelize(def.name)}(id, jsonData).then(data => {\r\n        abc.get${flect.camelize(flect.pluralize(def.name))}().then(${flect.camelize(flect.pluralize(def.name), true)} => {\r\n          abc.${flect.camelize(flect.pluralize(def.name), true)} = ${flect.camelize(flect.pluralize(def.name), true)}\r\n          abc.createTable()\r\n          ebot.hideModal()\r\n        })\r\n      })\r\n    })\r\n  },\r\n\r\n  handlerDelete: () => {\r\n    $(\"#submit-deletion\").click(e => {\r\n      let button = $(e.currentTarget)\r\n      let id = button.attr(\"data-id\")\r\n      abc.delete${flect.camelize(def.name)}(id).then(() => {\r\n        ebot.hideModal()\r\n        $(\\`tr[data-id=\\$\\{id\\}]\\`).remove()\r\n      })\r\n    })\r\n  },\r\n\r\n  get${flect.camelize(def.name)}Form: () => {\r\n    let htmlString = \\`\\n`\r\n\r\n    for(let prop in def.properties) {\r\n      switch(def.properties[prop].elementType) {\r\n        case \"select\":\r\n          output += `    <select id='${flect.dasherize(prop)}' class='form-control' data-placeholder='Choose an option...'>\\n    <option value=''></option>\\n`\r\n  \r\n          def.properties[prop].selectOptions.forEach(option => {\r\n            output += `    <option value='${option}'>${option}</option>\\n`\r\n          })\r\n          \r\n          output += `    </select><br />\\n`\r\n\r\n          break\r\n        case \"number\":\r\n          output += `    <label>${flect.titleize(prop)}</label> <input id='${flect.dasherize(prop)}' type='number' class='form-control'><br />\\n`\r\n          break\r\n        case \"date\":\r\n          output += `    <label>${flect.titleize(prop)}</label> <input id='${flect.dasherize(prop)}' type='date' class='form-control'><br />\\n`\r\n          break\r\n        case \"checkbox\":\r\n          output += `    <label>${flect.titleize(prop)}</label> <input id='${flect.dasherize(prop)}' type='checkbox' class='form-control'><br />\\n`\r\n          break\r\n        case \"textarea\":\r\n          output += `    <label>${flect.titleize(prop)}</label> <textarea id='${flect.dasherize(prop)}' class='form-control'></textarea><br /><br />\\n`\r\n          break\r\n        default: //text\r\n          output += `    <label>${flect.titleize(prop)}</label> <input id='${flect.dasherize(prop)}' class='form-control'><br />\\n`\r\n      }\r\n    }\r\n\r\n    // <label>Item Id</label> <input id='item-id' type='number' class='form-control'><br />\r\n    // <label>Name</label> <input id='name' class='form-control'><br />\r\n    // <label>Cost</label> <input id='cost' class='form-control'><br />\r\n    // <label>Effect</label> <input id='effect' class='form-control'><br />\r\n    // <label>Flavor Text</label> <textarea id='flavor-text' class='form-control'></textarea><br /><br />\r\n    // <label>Image Filename</label> <input id='image-filename' class='form-control'><br />\r\n    // <button id='submit' class='form-control' type='submit'>Submit</button>\\`\r\n\r\n  output += `    <button id='submit' class='form-control' type='submit'>Submit</button>\\`\r\n    return htmlString\r\n  },\r\n\r\n  fill${flect.camelize(def.name)}FormWithOldData: id => {\r\n    abc.get${flect.camelize(def.name)}(id).then(data => {\\n`\r\n\r\n      for(let prop in def.properties) {\r\n        output += `      $(\"#${flect.dasherize(prop)}\").val(data.${flect.camelize(prop, true)}),\\n`\r\n      }\r\n      output = output.replace(/,\\n$/g, \"\\n\")\r\n      // $(\"#item-id\").val(data.itemId),\r\n      // $(\"#name\").val(data.name),\r\n      // $(\"#cost\").val(data.cost),\r\n      // $(\"#flavor-text\").val(data.flavorText),\r\n      // $(\"#effect\").val(data.effect),\r\n      // $(\"#image-filename\").val(data.imageFilename)\r\n  output += `    })\r\n  },\r\n\r\n  get${flect.camelize(flect.pluralize(def.name))}: () => {\r\n    let deferred = $.ajax({\r\n      type: \"GET\",\r\n      url: \\`\\$\\{abc.apiurl\\}/${flect.camelize(flect.pluralize(def.name), true)}\\`,\r\n      success: function(data, status, jqXHR) {},\r\n      error: function(jqXHR, status) {console.log(\"get${flect.camelize(def.name)}s() Error\")}\r\n    }).promise()\r\n\r\n    return deferred\r\n  },\r\n\r\n  create${flect.camelize(def.name)}: jsonData => {\r\n    console.log(jsonData)\r\n    let deferred = $.ajax({\r\n      type: \"POST\",\r\n      url: \\`\\$\\{abc.apiurl\\}/${flect.camelize(flect.pluralize(def.name), true)}\\`,\r\n      data: abc.convertJsonToFormData(jsonData),\r\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n      success: (data, status, jqXHR) => {},\r\n      error: (jqXHR, status) => {\r\n        ebot.notify(\"error creating a ${flect.titleize(def.name)}\")\r\n        console.log(jqXHR)\r\n      }\r\n    }).promise()\r\n\r\n    return deferred\r\n  },\r\n\r\n  get${flect.camelize(def.name)}: id => {\r\n    let deferred = $.ajax({\r\n      type: \"GET\",\r\n      url: \\`\\$\\{abc.apiurl\\}/${flect.camelize(flect.pluralize(def.name), true)}/\\$\\{id\\}\\`,\r\n      success: function(data, status, jqXHR) {},\r\n      error: function(jqXHR, status) {console.log(\"get${flect.camelize(def.name)}() Error\")}\r\n    }).promise()\r\n\r\n    return deferred\r\n  },\r\n\r\n  update${flect.camelize(def.name)}: (id, jsonData) => {\r\n    let deferred = $.ajax({\r\n      type: \"PUT\",\r\n      url: \\`\\$\\{abc.apiurl\\}/${flect.camelize(flect.pluralize(def.name), true)}/\\$\\{id\\}\\`,\r\n      data: abc.convertJsonToFormData(jsonData),\r\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n      success: (data, status, jqXHR) => {},\r\n      error: (jqXHR, status) => {\r\n        ebot.notify(\"error updating a ${flect.titleize(def.name)}\")\r\n        console.log(jqXHR)\r\n      }\r\n    }).promise()\r\n\r\n    return deferred\r\n  },\r\n\r\n  delete${flect.camelize(def.name)}: id => {\r\n    let deferred = $.ajax({\r\n      type: \"DELETE\",\r\n      url: \\`\\$\\{abc.apiurl\\}/${flect.camelize(flect.pluralize(def.name), true)}/\\$\\{id\\}\\`,\r\n      success: function(data, status, jqXHR) {},\r\n      error: function(jqXHR, status) {console.log(\"delete${flect.camelize(def.name)}() Error\")}\r\n    }).promise()\r\n\r\n    return deferred\r\n  },\r\n\r\n  convertJsonToFormData: json => {\r\n    let string = \\`\\`\r\n\r\n    json = JSON.parse(json)\r\n\r\n    for(let prop in json) {\r\n      let converted = \\`\\$\\{prop\\}=\\$\\{encodeURI(json[prop])\\}&\\`\r\n      converted = converted.replace(/%20/g, \"+\")\r\n      string += converted\r\n    }\r\n    string = string.replace(/&$/g, \"\")\r\n\r\n    return string\r\n  },\r\n\r\n  apiurl: \"http://localhost:8082\",\r\n\r\n  ${flect.camelize(flect.pluralize(def.name), true)}: []\r\n\r\n}`\r\n\r\n  return output\r\n}\r\n\r\n\r\n\r\nlet createCrudRoutes = def => {\r\n  let output = `\r\n  app.get('/crud-${flect.dasherize(flect.pluralize(def.name))}', function(req, res) {\r\n    res.render('CRUD/${flect.dasherize(flect.pluralize(def.name))}.ejs', {\r\n        user : req.user\r\n    })\r\n  })\r\n\r\n  app.get('/css/crud-${flect.dasherize(flect.pluralize(def.name))}.css', function(req, res) {\r\n    res.sendFile(path.resolve(__dirname + './../css/crud-${flect.dasherize(flect.pluralize(def.name))}.css'))\r\n  })\r\n\r\n  app.get('/js/crud-${flect.dasherize(flect.pluralize(def.name))}.js', function(req, res) {\r\n    res.sendFile(path.resolve(__dirname + './../js/crud-${flect.dasherize(flect.pluralize(def.name))}.js'))\r\n  })\\n\\n`\r\n\r\n  return output\r\n}\r\n\r\nlet createCrudGruntFileAdditions = def => {\r\n  let output = `\r\n  babel_crud_${flect.underscore(flect.pluralize(def.name))}: {\r\n    files: [\r\n      'js/crud-${flect.dasherize(flect.pluralize(def.name))}-es6.js'\r\n    ],\r\n    tasks: ['babel:crud_${flect.underscore(flect.pluralize(def.name))}'],\r\n  },\r\n\r\n  crud_${flect.underscore(flect.pluralize(def.name))}: {\r\n    files: {\r\n      'js/crud-${flect.dasherize(flect.pluralize(def.name))}.js': 'js/crud-${flect.dasherize(flect.pluralize(def.name))}-es6.js'\r\n    }\r\n  },\r\n\r\n  `\r\n\r\n  return output\r\n}\r\n\r\nlet createCrudView = def => {\r\n  let output = `\r\n  <!doctype html>\r\n  <html>\r\n  <head>\r\n      <title>${flect.titleize(flect.pluralize(def.name))}</title>\r\n\r\n      <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"css/crud-${flect.dasherize(flect.pluralize(def.name))}.css\" />\r\n      <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"css/bootstrap.css\" />\r\n      <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"css/vis.css\" />\r\n      <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"css/jquery-ui.css\" />\r\n      <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"css/chosen.min.css\" />\r\n\r\n      <script type=\"text/javascript\" src=\"js/jquery.js\"></script>\r\n      <script type=\"text/javascript\" src=\"js/jquery-ui.js\"></script>\r\n      <script type=\"text/javascript\" src=\"js/chosen.jquery.js\"></script>\r\n      <script type=\"text/javascript\" src=\"js/moment.js\"></script>\r\n      <script type=\"text/javascript\" src=\"js/vis.js\"></script>\r\n      <script type=\"text/javascript\" src=\"js/bootstrap.js\"></script>\r\n      <script type=\"text/javascript\" src=\"js/inflection.js\"></script>\r\n      <script type=\"text/javascript\" src=\"js/deepcopy.js\"></script>\r\n      <script type=\"text/javascript\" src=\"js/socket-io.js\"></script>\r\n      <script type=\"text/javascript\" src=\"js/ebot.js\"></script>\r\n      <script type=\"text/javascript\" src=\"node_modules/howler/howler.js\"></script>\r\n    <script type=\"text/javascript\" src=\"js/crud-${flect.dasherize(flect.pluralize(def.name))}.js\"></script>\r\n\r\n  </head>\r\n  <body>\r\n\r\n\r\n  <button id='${flect.dasherize(def.name)}-create-button' class='btn btn-md'>New ${flect.titleize(def.name)}</button>\r\n\r\n  <div id='${flect.dasherize(def.name)}-table-wrapper'></div>\r\n\r\n  <div id='modal-holder'></div>\r\n      \r\n  </body>\r\n  </html>\r\n\r\n  `\r\n\r\n  return output\r\n}"]}